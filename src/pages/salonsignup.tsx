import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { api } from "../utils/api";
import Link from "next/link";
import { useEffect } from "react";

type InputState = {
  email: string;
  firstName: string;
  lastName: string;
  phoneNumber: string;
  password: string;
};

type PaymentInfo = {
  cardNumber: string;
  expDate: string;
  cvv: string;
};

const SalonSignup: NextPage = () => {
  const [step, setStep] = useState<number>(1);
  const [imageFile, setImageFile] = useState<File | null>(null);
  const [paymentInfo, setPaymentInfo] = useState<PaymentInfo>({
    cardNumber: "",
    expDate: "",
    cvv: "",
  });

  const [checkedMale, setCheckedMale] = useState<boolean>(false);
  const [checkedFemale, setCheckedFemale] = useState<boolean>(false);
  const [checkedMonthly, setCheckedMonthly] = useState<boolean>(false);
  const [checkedYearly, setCheckedYearly] = useState<boolean>(false);
  const [input, setInput] = useState<InputState>({
    email: "",
    firstName: "",
    lastName: "",
    phoneNumber: "",
    password: "",
  });

  const { mutate: signup } = api.users.signup.useMutation();

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setImageFile(e.target.files?.[0] ?? null);
    };


  const handleCardNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setPaymentInfo({ ...paymentInfo, cardNumber: e.target.value });
  };

  const handleExpDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setPaymentInfo({ ...paymentInfo, expDate: e.target.value });
  };

  const handleCVVChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setPaymentInfo({ ...paymentInfo, cvv: e.target.value });
  };

  const handleNextStep = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {
    e.preventDefault();
  
    if (step < 3) {
      setStep(prevStep => prevStep + 1);
    }
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
  
  
    // Only allow to signup if only one gender is selected
    if (checkedMale === checkedFemale) {
      alert('Please select only one gender.');
      return;
    }
  
    try {
      const { email, firstName, lastName, phoneNumber, password } = input;
      await signup({
        email: email,
        firstname: firstName,
        lastname: lastName,
        password: password,
        phoneNumber: phoneNumber,
        gender: checkedMale ? "Male" : "Female",
        // include other details as necessary
      });
    } catch (error) {
      console.error(error);
      alert('There was an issue with signup.');
    }
  };

  return (
    <>
      <Head>
      <title>Registracija</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" dark:bg-blue-300  md:h-screen">
        <div className="relative flex min-h-screen flex-col justify-center overflow-hidden">
          <div className="m-auto w-full rounded-md bg-timberwolf p-6 shadow-md lg:max-w-xl">
            <h1 className="text-center text-3xl font-semibold text-rich-black ">
              Registracija
            </h1>
        {/* other content */}
        <form className="mt-6" onSubmit={handleSubmit}>
          {step === 1 && (
            <>
              <div className="mb-2">
                    <label className="text-gray-800 block text-sm font-semibold">
                        Naziv salona
                    </label>
                    <input
                        type="email"
                        className="text-blue-700 focus:border-blue-400 dark:placeholder-gray-400 mt-2 block w-full rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-rich-black focus:ring-opacity-40"
                        required
                        placeholder="Frizzy"
                        onChange={(e) => {
                            setInput({ ...input, email: e.target.value });
                        }}
                    />
              </div>
              <div className="mb-2">
                <label className="text-gray-800 block text-sm font-semibold">
                  Email
                </label>
                <input
                  type="email"
                  className="text-blue-700 focus:border-blue-400 dark:placeholder-gray-400 mt-2 block w-full rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-rich-black focus:ring-opacity-40"
                  required
                  placeholder="john.doe@company.com"
                  onChange={(e) => {
                    setInput({ ...input, email: e.target.value });
                  }}
                />
              </div>
              <div className="mb-2">
                <label className="text-gray-800 block text-sm font-semibold">
                  Ime vlasnika
                </label>
                <input
                  className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 mt-2 block w-full rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                  required
                  placeholder="John"
                  onChange={(e) => {
                    setInput({ ...input, firstName: e.target.value });
                  }}
                />
              </div>
              <div className="mb-2">
                <label className="text-gray-800 block text-sm font-semibold">
                  Prezime vlasnika
                </label>
                <input
                  className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 mt-2 block w-full rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                  required
                  placeholder="Doe"
                  onChange={(e) => {
                    setInput({ ...input, lastName: e.target.value });
                  }}
                />
              </div>
              <div className="mb-2">
                <label className="text-gray-800 block text-sm font-semibold">
                  Broj telefona
                </label>
                <input
                  type="tel"
                  className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 mt-2 block w-full rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                  required
                  placeholder="123-456-7890"
                  onChange={(e) => {
                    setInput({ ...input, phoneNumber: e.target.value });
                  }}
                />
              </div>
              <div className="mb-2">
                <label className="text-gray-800 block text-sm font-semibold">
                  Šifra
                </label>
                <input
                  type="password"
                  className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 mt-2 block w-full rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                  required
                  placeholder="•••••••••"
                  onChange={(e) => {
                    setInput({ ...input, password: e.target.value });
                  }}
                />
              </div>
              <div className="mb-2 ">
                <label className="text-gray-800 block text-sm font-semibold">
                  Spol
                </label>
                <div className="flex items-center justify-center gap-4">
                <label>Muško</label>
                <input
                    type="radio"
                    name="gender"
                    onChange={() => {
                    setCheckedMale(true);
                    setCheckedFemale(false);
                    }}
                    className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400  block rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                />

                <label>Žensko</label>
                <input
                    name="gender"
                    onChange={() => {
                    setCheckedFemale(true);
                    setCheckedMale(false);
                    }}
                    type="radio"
                    className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 block rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                />
                </div>

              </div>
            </>
          )}
          {step === 2 && (
            <>
                <div className="mb-2">
                    <label htmlFor="image" className="text-gray-800 block text-sm font-semibold">Slika salona</label>
                    
                    <div className="flex justify-center mb-4">
                    <div className="w-32 h-32 rounded-full overflow-hidden">
                    <img
                        src="https://via.placeholder.com/150"
                        alt="Profile picture"
                        className="object-cover w-full h-full"
                    />
                    </div>
                </div>
                <div className="flex justify-center mb-4">
                    <input
                    type="file"
                    name="image"
                    accept="image/*"
                    className="text-blue-500 font-medium"
                    onChange={handleFileChange}
                    />
                    Promijeni sliku
                    
                </div>
                </div>
                <div className="mb-2 ">
                    <label className="text-gray-800 block text-sm font-semibold">
                    Radno vrijeme
                    </label>
                    <div className="flex items-center justify-center gap-4">
                    <label>Od</label>
                    <input
                        type="time"
                        name="time"
                        required
                        className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400  block rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                    />

                    <label>Do</label>
                    <input
                        name="time"
                        type="time"
                        required
                        className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 block rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                    />
                    </div>
                 </div>
                 <div className="mb-2">
                    <label htmlFor="image" className="text-gray-800 block text-sm font-semibold mb-2">Opis {"(opcionalno)"}</label>
                    <textarea rows={4} className="w-full"/>
                </div>
            </>
          )}
          {step === 3 && (
            <>
                <div className="mb-2">
                    <label htmlFor="image" className="text-gray-800 block text-sm font-semibold mb-2">Broj kartice</label>
                    <input type="text" className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 mt-2 block w-full rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40" placeholder="Card Number" value={paymentInfo.cardNumber} onChange={handleCardNumberChange} required />
                </div>
                <div className="mb-2">
                    <label htmlFor="image" className="text-gray-800 block text-sm font-semibold mb-2">Datum isticanja kartice</label>
                    <input type="text" className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 mt-2 block w-full rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40" placeholder="Exp. Date (MM/YY)" value={paymentInfo.expDate} onChange={handleExpDateChange} required />
                </div>
                <div className="mb-2">
                    <label htmlFor="image" className="text-gray-800 block text-sm font-semibold mb-2">CVV</label>
                    <input type="text" className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 mt-2 block w-full rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40" placeholder="CVV" value={paymentInfo.cvv} onChange={handleCVVChange} required />
                </div>
                <div className="mb-2 ">
                <label className="text-gray-800 block text-sm font-semibold">
                  Način pretplate
                </label>
                <div className="flex items-center justify-center gap-4">
                <label>Mjesečno {"(20KM)"}</label>
                <input
                    type="radio"
                    name="payment"
                    onChange={() => {
                    setCheckedMonthly(true);
                    setCheckedYearly(false);
                    }}
                    className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400  block rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                />

                <label>Godišnje {"(150KM)"}</label>
                <input
                    name="payment"
                    onChange={() => {
                    setCheckedYearly(true);
                    setCheckedMonthly(false);
                    }}
                    type="radio"
                    className="text-blue-700 focus:border-blue-400 focus:ring-blue-300 dark:placeholder-gray-400 block rounded-md border bg-white px-4 py-2 focus:outline-none focus:ring focus:ring-opacity-40"
                />
                </div>

              </div>
            </>
          )}
          <div className="mt-6">
          <button 
            onClick={step < 3 ? handleNextStep : undefined} 
            type={step < 3 ? 'button' : 'submit'} 
            className="focus:bg-blue-600 w-full transform rounded-md bg-blue-500 px-4 py-2 tracking-wide text-white transition-colors duration-200 hover:bg-prussian-blue focus:outline-none"
            >
            {step < 3 ? 'Next Step' : 'Submit'}
            </button>

          </div>
        </form>
        {/* other content */}
        </div>
        </div>
      </main>
    </>
  );
};

export default SalonSignup;
