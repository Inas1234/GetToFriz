import React from "react";
import { NextPage } from "next";
import Head from "next/head";
import Navbar from "../components/navbar";
import Footer from "../components/footer";
import { useState, useEffect } from "react";
import { api } from "../utils/api";
import { useRouter } from "next/router";

const User: NextPage = () => {
  
  const [tokenValue, setTokenValue] = useState<any>("");

  useEffect(() => {
    const token = document.cookie
      .split("; ")
      .find((row) => row.startsWith("token="));
    const tokenValue = token ? token.split("=")[1] : null;
    setTokenValue(tokenValue);
    console.log(tokenValue);

  }, []);

  const mail = api.users.getEmail.useQuery({ token: tokenValue });

  // Profile update
  const [userDetails, setUserDetails] = useState({
    email: '',
    newEmail: '',
    firstname: '',
    lastname: '',
    phoneNumber: '',
    password: '',
  });
  useEffect(() => {
    if (mail.data?.email) {
      setUserDetails(prev => ({ ...prev, email: mail.data.email }));
    }
  }, [mail.data]);
  const router = useRouter();
  
  const { mutate: updateProfile } = api.users.updateProfile.useMutation({
    onSuccess: (data) => {
      router.push('/');
    },
  });

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    updateProfile(userDetails);
  };

  // Password update
  const [passwordDetails, setPasswordDetails] = useState({
    email: '',
    oldPassword: '',
    newPassword: '',
    newPasswordConfirm: '',
  });

  useEffect(() => {
    if (mail.data?.email) {
      setPasswordDetails(prev => ({ ...prev, email: mail.data.email }));
    }
  }, [mail.data]);

  const { mutate: updateProfilePassword } = api.users.updateProfilePassword.useMutation({
    onSuccess: (data) => {
      router.push('/');
    },
  });

  const handleSubmitPassword = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    updateProfilePassword(passwordDetails);
  };
  
  return (
    <>
      <Head>
        <title>User</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar  />;
      

      <div className="flex-grow sm:mt-6">
        <div className="mx-auto max-w-7xl py-12 px-4 sm:px-6 lg:px-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-8">
            Postavke računa
          </h1>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div className="bg-white shadow shadow-gray-700 rounded-lg px-6 py-8">
              <h2 className="text-xl font-bold text-gray-900 mb-4">
                Lične informacije
              </h2>

              <form onSubmit={handleSubmit} >
              
              
                <div className="mb-4">
                  <label
                    htmlFor="name"
                    className="block text-gray-700 font-bold mb-2"
                  >
                    Ime
                  </label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    onChange={(e) => setUserDetails({...userDetails, firstname: e.target.value})}
                    placeholder="John"
                    className="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                  />
                </div>
                <div className="mb-4">
                  <label
                    htmlFor="surname"
                    className="block text-gray-700 font-bold mb-2"
                  >
                    Prezime
                  </label>
                  <input
                    type="text"
                    id="surname"
                    name="surname"
                    onChange={(e) => setUserDetails({...userDetails, lastname: e.target.value})}
                    placeholder="Doe"
                    className="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                  />
                </div>
                <div className="mb-4">
                  <label
                    htmlFor="email"
                    className="block text-gray-700 font-bold mb-2"
                  >
                    Email
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    onChange={(e) => setUserDetails({...userDetails, newEmail: e.target.value})}
                    placeholder="geto@gmail.com"
                    className="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                  />
                </div>
                <div className="mb-4">
                  <label
                    htmlFor="phone"
                    className="block text-gray-700 font-bold mb-2"
                  >
                    Broj telefona
                  </label>
                  <input
                    type="text"
                    id="phone"
                    name="phone"
                    onChange={(e) => setUserDetails({...userDetails, phoneNumber: e.target.value})}
                    placeholder="123-456-789"
                    className="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                  />
                </div>
                <div className="mb-4">
                  <label
                    htmlFor="password"
                    className="block text-gray-700 font-bold mb-2"
                  >
                    Trenutna šifra
                  </label>
                  <input
                    type="password"
                    id="password"
                    name="password"
                    onChange={(e) => setUserDetails({...userDetails, password: e.target.value})}
                    placeholder="********"
                    className="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                  />
                </div>
                <button
                  type="submit"
                  className="bg-blue-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline hover:bg-blue-600"
                >
                  Sačuvaj
                </button>
              </form>
            </div>

            <div className="bg-white shadow shadow-gray-700 rounded-lg px-6 py-8">
              <h2 className="text-xl font-bold text-gray-900 mb-4">
                Sigurnosne postavke
              </h2>
              <h3 className="text-l font-normal text-gray-900 mb-4">
                Promijeni šifru
              </h3>
              <form onSubmit={handleSubmitPassword}>
                <div className="mb-4">
                  <label
                    htmlFor="password"
                    className="block text-gray-700 font-bold mb-2"
                  >
                    Nova šifra
                  </label>
                  <input
                    type="password"
                    id="password"
                    name="password"
                    onChange={(e) => setPasswordDetails({...passwordDetails, newPassword: e.target.value})}
                    placeholder="********"
                    className="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                  />
                </div>

                <div className="mb-4">
                  <label
                    htmlFor="confirm-password"
                    className="block text-gray-700 font-bold mb-2"
                  >
                    Potvrdi šifru
                  </label>
                  <input
                    type="password"
                    id="confirm-password"
                    name="confirm-password"
                    onChange={(e) => setPasswordDetails({...passwordDetails, newPasswordConfirm: e.target.value})}
                    placeholder="********"
                    className="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                  />
                </div>
                <div className="mb-4">
                  <label
                    htmlFor="password"
                    className="block text-gray-700 font-bold mb-2"
                  >
                    Trenutna šifra
                  </label>
                  <input
                    type="password"
                    id="password"
                    name="password"
                    onChange={(e) => setPasswordDetails({...passwordDetails, oldPassword: e.target.value})}
                    placeholder="********"
                    className="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                  />
                </div>
                <div className="mb-4">
                  <h4 className="text-l font-bold text-gray-900 mb-4">Vaša šifra mora da sadrži:</h4>
                  <ul className="list-disc ml-4 mb-8">
                    <li>Najmanje 8 znakova</li>
                    <li>Najmanje 1 broj</li>
                    <li>Najmanje 1 veliko slovo</li>
                  </ul>

                </div>
                <button
                  type="submit"
                  className="bg-blue-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline hover:bg-blue-600"
                >
                  Sačuvaj
                </button>
              </form>
            </div>
            
          </div>
        </div>
      </div>

      <Footer />

    </>
  );
};

export default User;